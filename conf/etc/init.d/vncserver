#!/bin/sh
#
# VNCserver init script
#
### BEGIN INIT INFO
# Provides:          vncserver
# Required-Start:    $network $local_fs $remote_fs
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: init-Script for system wide fetchmail daemon
### END INIT INFO
#
# A fetchmailrc file containg hosts and passwords for all local users should be
# placed in /etc/fetchmailrc.  Remember to make the /etc/fetchmailrc mode 600
# to avoid disclosing the users' passwords.
#
# This script will NOT start or stop fetchmail if the /etc/fetchmailrc file
# does not exist or /etc/default/fetchmail is set to no.

# Defaults
PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin
DAEMON=/usr/bin/vncserver
USER=
PORT=
OPTIONS=""

. /lib/lsb/init-functions

test -f /etc/default/vncserver || exit 0
. /etc/default/vncserver

OPTIONS="$OPTIONS"

PIDFILE="/var/run/vncserver.pid"

if [ ! "x$START_DAEMON" = "xyes" -a ! "$1" = "stop" ]; then
	echo "Edit /etc/default/vncserver to start vncserver"
	exit 0
fi

test -f $DAEMON || exit 0

set -e

case "$1" in
	start)
		if test -e $PIDFILE ; then
			pid=`cat $PIDFILE | sed -e 's/\s.*//'|head -n1`
			PIDDIR=/proc/$pid
		    if [ -d ${PIDDIR} -a  "$(readlink -f ${PIDDIR}/exe)" = "${DAEMON}" ]; then
				log_failure_msg "vncserver already started; not starting."
				exit 0
			else
				log_warning_msg "Removing stale PID file $PIDFILE."
				rm -f $PIDFILE
			fi
		fi
	        log_begin_msg "Starting vncserver audio server:" "vncserver"
		if start-stop-daemon -m -b -S -o -q -p $PIDFILE -x $DAEMON -u $USER -c $USER -a $DAEMON -- $OPTIONS :$PORT; then
			log_end_msg 0
		else
			log_end_msg 1
			exit 1
		fi
		;;
	stop)
		if ! test -e $PIDFILE ; then
			log_failure_msg "Pidfile not found! Is vncserver running?"
			exit 0
		fi
	        log_begin_msg "Stopping vncserver:" "vncserver"
		if start-stop-daemon -m -K -o -q -p $PIDFILE -x $DAEMON -u $USER; then
		        $DAEMON -kill :$PORT 
                        rm -f $PIDFILE
			log_end_msg 0
		else
			rm -f $PIDFILE
			log_end_msg 1
			exit 1
		fi
		;;
	force-reload|restart)
	        log_begin_msg "Restarting vncserver:" "vncserver"
		if ! start-stop-daemon -m -K -o -q -p $PIDFILE -x $DAEMON -u $USER; then
			log_end_msg 1
			exit 1
		fi
		sleep 1
                rm -f $PIDFILE || true
		if start-stop-daemon -m -b -S -o -q -p $PIDFILE -x $DAEMON -u $USER -c $USER -a $DAEMON -- $OPTIONS; then
			log_end_msg 0
		else
			log_end_msg 1
			exit 1
		fi
		;;
	try-restart)
		if test -e $PIDFILE ; then
			pid=`cat $PIDFILE | sed -e 's/\s.*//'|head -n1`
			PIDDIR=/proc/$pid
			if [ -d ${PIDDIR} -a  "$(readlink -f ${PIDDIR}/exe)" = "${DAEMON}" ]; then
				$0 restart
				exit 0
			fi
		fi
		test -f /etc/rc`/sbin/runlevel | cut -d' ' -f2`.d/S*vncserver* && $0 start
		;;
	awaken)
	        log_begin_msg "Awakening vncserver:" "vncserver"
		if [ -s $PIDFILE ]; then
			start-stop-daemon -K -s 10 -q -p $PIDFILE -x $DAEMON
			log_end_msg 0
			exit 0
		else
			log_end_msg 1
			exit 1
		fi
		;;
	*)
		log_warning_msg "Usage: /etc/init.d/vncserver {start|stop|restart|force-reload|awaken|debug-run}"
		log_warning_msg "  start - starts system-wide vncserver service"
		log_warning_msg "  stop  - stops system-wide vncserver service"
		log_warning_msg "  restart, force-reload - starts a new system-wide vncserver service"
		log_warning_msg "  awaken - tell system-wide vncserver to start a poll cycle immediately"
		log_warning_msg "  debug-run [strace [strace options...]] - start a debug run of the"
		log_warning_msg "    system-wide vncserver service, optionally running it under strace"
		exit 1
		;;
esac

exit 0
